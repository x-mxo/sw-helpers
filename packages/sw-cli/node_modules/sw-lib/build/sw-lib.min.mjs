/*
 Copyright 2016 Google Inc. All Rights Reserved.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
class ErrorFactory$1{constructor(t){this._errors=t}createError(t,r){if(!(t in this._errors))throw new Error(`Unable to generate error '${t}'.`);let a=this._errors[t].replace(/\s+/g,' '),s=null;r&&(a+=` [${r.message}]`,s=r.stack);const o=new Error;return o.name=t,o.message=a,o.stack=s,o}}const errors={'not-in-sw':'sw-lib must be loaded in your service worker file.','unsupported-route-type':'Routes must be either a express style route string, a Regex to capture request URLs or a Route instance.','empty-express-string':'The Express style route string must have some characters, an empty string is invalid.','bad-revisioned-cache-list':`The 'cacheRevisionedAssets()' method expects`+`an array of revisioned urls like so: ['/example/hello.1234.txt', `+`{path: 'hello.txt', revision: '1234'}]`,'navigation-route-url-string':`The registerNavigationRoute() method `+`expects a URL string as its first parameter.`};var ErrorFactory=new ErrorFactory$1(errors);const errors$1={'express-route-requires-absolute-path':`When using ExpressRoute, you must
    provide a path that starts with a '/' character. You can only match
    same-origin requests. For more flexibility, use RegExpRoute.`};var ErrorFactory$3=new ErrorFactory$1(errors$1),commonjsGlobal='undefined'==typeof window?'undefined'==typeof global?'undefined'==typeof self?{}:self:global:window;function createCommonjsModule(t,r){return r={exports:{}},t(r,r.exports),r.exports}var stackframe=createCommonjsModule(function(t){(function(a,s){'use strict';t.exports=s()})(commonjsGlobal,function(){'use strict';function _isNumber(g){return!isNaN(parseFloat(g))&&isFinite(g)}function _capitalize(g){return g[0].toUpperCase()+g.substring(1)}function _getter(g){return function(){return this[g]}}function StackFrame(g){if(g instanceof Object)for(var f=a.concat(s.concat(o.concat(l))),y=0;y<f.length;y++)g.hasOwnProperty(f[y])&&void 0!==g[f[y]]&&this['set'+_capitalize(f[y])](g[f[y]])}var a=['isConstructor','isEval','isNative','isToplevel'],s=['columnNumber','lineNumber'],o=['fileName','functionName','source'],l=['args'];StackFrame.prototype={getArgs:function(){return this.args},setArgs:function(g){if('[object Array]'!==Object.prototype.toString.call(g))throw new TypeError('Args must be an Array');this.args=g},getEvalOrigin:function(){return this.evalOrigin},setEvalOrigin:function(g){if(g instanceof StackFrame)this.evalOrigin=g;else if(g instanceof Object)this.evalOrigin=new StackFrame(g);else throw new TypeError('Eval Origin must be an Object or StackFrame')},toString:function(){var g=this.getFunctionName()||'{anonymous}',f='('+(this.getArgs()||[]).join(',')+')',y=this.getFileName()?'@'+this.getFileName():'',b=_isNumber(this.getLineNumber())?':'+this.getLineNumber():'',_=_isNumber(this.getColumnNumber())?':'+this.getColumnNumber():'';return g+f+y+b+_}};for(var d=0;d<a.length;d++)StackFrame.prototype['get'+_capitalize(a[d])]=_getter(a[d]),StackFrame.prototype['set'+_capitalize(a[d])]=function(g){return function(f){this[g]=!!f}}(a[d]);for(var u=0;u<s.length;u++)StackFrame.prototype['get'+_capitalize(s[u])]=_getter(s[u]),StackFrame.prototype['set'+_capitalize(s[u])]=function(g){return function(f){if(!_isNumber(f))throw new TypeError(g+' must be a Number');this[g]=+f}}(s[u]);for(var h=0;h<o.length;h++)StackFrame.prototype['get'+_capitalize(o[h])]=_getter(o[h]),StackFrame.prototype['set'+_capitalize(o[h])]=function(g){return function(f){this[g]=f+''}}(o[h]);return StackFrame})}),errorStackParser=createCommonjsModule(function(t){(function(a,s){'use strict';t.exports=s(stackframe)})(commonjsGlobal,function ErrorStackParser(a){'use strict';var s=/(^|@)\S+\:\d+/,o=/^\s*at .*(\S+\:\d+|\(native\))/m,l=/^(eval@)?(\[native code\])?$/;return{parse:function ErrorStackParser$$parse(d){if('undefined'!=typeof d.stacktrace||'undefined'!=typeof d['opera#sourceloc'])return this.parseOpera(d);if(d.stack&&d.stack.match(o))return this.parseV8OrIE(d);if(d.stack)return this.parseFFOrSafari(d);throw new Error('Cannot parse given Error object')},extractLocation:function ErrorStackParser$$extractLocation(d){if(-1===d.indexOf(':'))return[d];var u=/(.+?)(?:\:(\d+))?(?:\:(\d+))?$/,h=u.exec(d.replace(/[\(\)]/g,''));return[h[1],h[2]||void 0,h[3]||void 0]},parseV8OrIE:function ErrorStackParser$$parseV8OrIE(d){var u=d.stack.split('\n').filter(function(h){return!!h.match(o)},this);return u.map(function(h){-1<h.indexOf('(eval ')&&(h=h.replace(/eval code/g,'eval').replace(/(\(eval at [^\()]*)|(\)\,.*$)/g,''));var g=h.replace(/^\s+/,'').replace(/\(eval code/g,'(').split(/\s+/).slice(1),f=this.extractLocation(g.pop()),y=g.join(' ')||void 0,b=-1<['eval','<anonymous>'].indexOf(f[0])?void 0:f[0];return new a({functionName:y,fileName:b,lineNumber:f[1],columnNumber:f[2],source:h})},this)},parseFFOrSafari:function ErrorStackParser$$parseFFOrSafari(d){var u=d.stack.split('\n').filter(function(h){return!h.match(l)},this);return u.map(function(h){if(-1<h.indexOf(' > eval')&&(h=h.replace(/ line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g,':$1')),-1===h.indexOf('@')&&-1===h.indexOf(':'))return new a({functionName:h});var g=h.split('@'),f=this.extractLocation(g.pop()),y=g.join('@')||void 0;return new a({functionName:y,fileName:f[0],lineNumber:f[1],columnNumber:f[2],source:h})},this)},parseOpera:function ErrorStackParser$$parseOpera(d){return!d.stacktrace||-1<d.message.indexOf('\n')&&d.message.split('\n').length>d.stacktrace.split('\n').length?this.parseOpera9(d):d.stack?this.parseOpera11(d):this.parseOpera10(d)},parseOpera9:function ErrorStackParser$$parseOpera9(d){for(var b,u=/Line (\d+).*script (?:in )?(\S+)/i,h=d.message.split('\n'),g=[],f=2,y=h.length;f<y;f+=2)b=u.exec(h[f]),b&&g.push(new a({fileName:b[2],lineNumber:b[1],source:h[f]}));return g},parseOpera10:function ErrorStackParser$$parseOpera10(d){for(var b,u=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,h=d.stacktrace.split('\n'),g=[],f=0,y=h.length;f<y;f+=2)b=u.exec(h[f]),b&&g.push(new a({functionName:b[3]||void 0,fileName:b[2],lineNumber:b[1],source:h[f]}));return g},parseOpera11:function ErrorStackParser$$parseOpera11(d){var u=d.stack.split('\n').filter(function(h){return!!h.match(s)&&!h.match(/^Error created at/)},this);return u.map(function(h){var g=h.split('@'),f=this.extractLocation(g.pop()),y=g.shift()||'',b=y.replace(/<anonymous function(: (\w+))?>/,'$2').replace(/\([^\)]*\)/g,'')||void 0,_;y.match(/\(([^\)]*)\)/)&&(_=y.replace(/^[^\(]+\(([^\)]*)\)$/,'$1'));var N=_===void 0||'[arguments not available]'===_?void 0:_.split(',');return new a({functionName:b,args:N,fileName:f[0],lineNumber:f[1],columnNumber:f[2],source:h})},this)}}})});function atLeastOne(t){const r=Object.keys(t);r.some((a)=>t[a]!==void 0)||throwError('Please set at least one of the following parameters: '+r.map((a)=>`'${a}'`).join(', '))}function hasMethod(t,r){const a=Object.keys(t).pop(),s=typeof t[a][r];'function'!=s&&throwError(`The '${a}' parameter must be an object that exposes a
      '${r}' method.`)}function isInstance(t,r){const a=Object.keys(t).pop();t[a]instanceof r||throwError(`The '${a}' parameter must be an instance of
      '${r.name}'`)}function isOneOf(t,r){const a=Object.keys(t).pop();r.includes(t[a])||throwError(`The '${a}' parameter must be set to one of the
      following: ${r}`)}function isType(t,r){const a=Object.keys(t).pop(),s=typeof t[a];s!==r&&throwError(`The '${a}' parameter has the wrong type. (Expected:
      ${r}, actual: ${s})`)}function isArrayOfType(t,r){const a=Object.keys(t).pop(),s=`The '${a}' parameter should be an array containing
    one or more '${r}' elements.`;Array.isArray(t[a])||throwError(s);for(let o of t[a])typeof o!==r&&throwError(s)}function isArrayOfClass(t,r){const a=Object.keys(t).pop(),s=`The '${a}' parameter should be an array containing
    one or more '${r.name}' instances.`;Array.isArray(t[a])||throwError(s);for(let o of t[a])o instanceof r||throwError(s)}function isSWEnv(){return'ServiceWorkerGlobalScope'in self&&self instanceof ServiceWorkerGlobalScope}function isValue(t,r){const a=Object.keys(t).pop(),s=t[a];s!==r&&throwError(`The '${a}' parameter has the wrong value. (Expected: 
      ${r}, actual: ${s})`)}function throwError(t){const r=new Error(t),a=errorStackParser.parse(r);throw 3<=a.length&&(r.message=`Invalid call to ${a[2].functionName}() â€” `+t.replace(/\s+/g,' '),r.name=a[1].functionName.replace(/^Object\./,'')),r}var assert={atLeastOne,hasMethod,isInstance,isOneOf,isType,isSWEnv,isValue,isArrayOfType,isArrayOfClass};const defaultMethod='GET',validMethods=['DELETE','GET','HEAD','POST','PUT'];class Route{constructor({match:t,handler:r,method:a}={}){assert.isType({match:t},'function'),'object'==typeof r?assert.hasMethod({handler:r},'handle'):assert.isType({handler:r},'function'),this.match=t,this.handler='function'==typeof r?{handle:r}:r,a?(assert.isOneOf({method:a},validMethods),this.method=a):this.method=defaultMethod}}var index$1=Array.isArray||function(t){return'[object Array]'==Object.prototype.toString.call(t)},isarray=index$1,index=pathToRegexp,parse_1=parse,compile_1=compile,tokensToFunction_1=tokensToFunction,tokensToRegExp_1=tokensToRegExp,PATH_REGEXP=new RegExp(['(\\\\.)','([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'),'g');function parse(t,r){for(var u,a=[],s=0,o=0,l='',d=r&&r.delimiter||'/';null!=(u=PATH_REGEXP.exec(t));){var h=u[0],g=u[1],f=u.index;if(l+=t.slice(o,f),o=f+h.length,g){l+=g[1];continue}var y=t[o],b=u[2],_=u[3],N=u[4],E=u[5],C=u[6],x=u[7];l&&(a.push(l),l='');var w=u[2]||d,L=N||E;a.push({name:_||s++,prefix:b||'',delimiter:w,optional:'?'===C||'*'===C,repeat:'+'===C||'*'===C,partial:null!=b&&null!=y&&y!==b,asterisk:!!x,pattern:L?escapeGroup(L):x?'.*':'[^'+escapeString(w)+']+?'})}return o<t.length&&(l+=t.substr(o)),l&&a.push(l),a}function compile(t,r){return tokensToFunction(parse(t,r))}function encodeURIComponentPretty(t){return encodeURI(t).replace(/[\/?#]/g,function(r){return'%'+r.charCodeAt(0).toString(16).toUpperCase()})}function encodeAsterisk(t){return encodeURI(t).replace(/[?#]/g,function(r){return'%'+r.charCodeAt(0).toString(16).toUpperCase()})}function tokensToFunction(t){for(var r=Array(t.length),a=0;a<t.length;a++)'object'==typeof t[a]&&(r[a]=new RegExp('^(?:'+t[a].pattern+')$'));return function(s,o){for(var f,l='',d=s||{},u=o||{},h=u.pretty?encodeURIComponentPretty:encodeURIComponent,g=0;g<t.length;g++){if(f=t[g],'string'==typeof f){l+=f;continue}var b,y=d[f.name];if(null==y)if(f.optional){f.partial&&(l+=f.prefix);continue}else throw new TypeError('Expected "'+f.name+'" to be defined');if(isarray(y)){if(!f.repeat)throw new TypeError('Expected "'+f.name+'" to not repeat, but received `'+JSON.stringify(y)+'`');if(0===y.length)if(f.optional)continue;else throw new TypeError('Expected "'+f.name+'" to not be empty');for(var _=0;_<y.length;_++){if(b=h(y[_]),!r[g].test(b))throw new TypeError('Expected all "'+f.name+'" to match "'+f.pattern+'", but received `'+JSON.stringify(b)+'`');l+=(0===_?f.prefix:f.delimiter)+b}continue}if(b=f.asterisk?encodeAsterisk(y):h(y),!r[g].test(b))throw new TypeError('Expected "'+f.name+'" to match "'+f.pattern+'", but received "'+b+'"');l+=f.prefix+b}return l}}function escapeString(t){return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g,'\\$1')}function escapeGroup(t){return t.replace(/([=!:$\/()])/g,'\\$1')}function attachKeys(t,r){return t.keys=r,t}function flags(t){return t.sensitive?'':'i'}function regexpToRegexp(t,r){var a=t.source.match(/\((?!\?)/g);if(a)for(var s=0;s<a.length;s++)r.push({name:s,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return attachKeys(t,r)}function arrayToRegexp(t,r,a){for(var s=[],o=0;o<t.length;o++)s.push(pathToRegexp(t[o],r,a).source);var l=new RegExp('(?:'+s.join('|')+')',flags(a));return attachKeys(l,r)}function stringToRegexp(t,r,a){return tokensToRegExp(parse(t,a),r,a)}function tokensToRegExp(t,r,a){isarray(r)||(a=r||a,r=[]),a=a||{};for(var u,s=a.strict,o=!1!==a.end,l='',d=0;d<t.length;d++)if(u=t[d],'string'==typeof u)l+=escapeString(u);else{var h=escapeString(u.prefix),g='(?:'+u.pattern+')';r.push(u),u.repeat&&(g+='(?:'+h+g+')*'),g=u.optional?u.partial?h+'('+g+')?':'(?:'+h+'('+g+'))?':h+'('+g+')',l+=g}var f=escapeString(a.delimiter||'/'),y=l.slice(-f.length)===f;return s||(l=(y?l.slice(0,-f.length):l)+'(?:'+f+'(?=$))?'),l+=o?'$':s&&y?'':'(?='+f+'|$)',attachKeys(new RegExp('^'+l,flags(a)),r)}function pathToRegexp(t,r,a){return isarray(r)||(a=r||a,r=[]),a=a||{},t instanceof RegExp?regexpToRegexp(t,r):isarray(t)?arrayToRegexp(t,r,a):stringToRegexp(t,r,a)}index.parse=parse_1,index.compile=compile_1,index.tokensToFunction=tokensToFunction_1,index.tokensToRegExp=tokensToRegExp_1;class ExpressRoute extends Route{constructor({path:t,handler:r,method:a}){if('/'!==t.substring(0,1))throw ErrorFactory$3.createError('express-route-requires-absolute-path');let s=[];const o=index(t,s);super({match:({url:d})=>{if(d.origin!==location.origin)return null;const u=d.pathname.match(o);if(!u)return null;const h={};return s.forEach((g,f)=>{h[g.name]=u[f+1]}),h},handler:r,method:a})}}class NavigationRoute extends Route{constructor({whitelist:t,blacklist:r,handler:a}={}){assert.isArrayOfClass({whitelist:t},RegExp),r?assert.isArrayOfClass({blacklist:r},RegExp):r=[];super({match:({event:o,url:l})=>{return'navigate'===o.request.mode&&t.some((d)=>d.test(l.pathname))&&!r.some((d)=>d.test(l.pathname))},handler:a,method:'GET'})}}class RegExpRoute extends Route{constructor({regExp:t,handler:r,method:a}){assert.isInstance({regExp:t},RegExp);super({match:({url:o})=>{const l=o.href.match(t);return l?l.slice(1):null},handler:r,method:a})}}self.goog=self.goog||{},self.goog.LOG_LEVEL=self.goog.LOG_LEVEL||{none:-1,verbose:0,debug:1,warn:2,error:3};class LogHelper{constructor(){this._allowedLogLevel='localhost'===location.hostname?self.goog.LOG_LEVEL.debug:self.goog.LOG_LEVEL.none}log(...t){this._printMessage(self.goog.LOG_LEVEL.verbose,console.log,t)}debug(...t){this._printMessage(self.goog.LOG_LEVEL.debug,console.debug,t)}warn(...t){this._printMessage(self.goog.LOG_LEVEL.warn,console.warn,t)}error(...t){this._printMessage(self.goog.LOG_LEVEL.error,console.error,t)}_printMessage(t,r,a){let s=this._allowedLogLevel;self&&self.goog&&self.goog.logLevel&&(s=self.goog.logLevel);s===self.goog.LOG_LEVEL.none||t<s||r(...a)}}var logHelper=new LogHelper;class Router$2{setDefaultHandler({handler:t}={}){assert.hasMethod({handler:t},'handle'),this.defaultHandler=t}setCatchHandler({handler:t}={}){assert.hasMethod({handler:t},'handle'),this.catchHandler=t}registerRoutes({routes:t}={}){assert.isArrayOfClass({routes:t},Route),self.addEventListener('fetch',(r)=>{const a=new URL(r.request.url);if(!a.protocol.startsWith('http'))return void logHelper.debug(`[router.js] URL does not start with HTTP`,r.request.url);let s;for(let o of t||[])if(o.method===r.request.method){const l=o.match({url:a,event:r});if(l){logHelper.debug(`[router.js] Found matching result: `,r.request.url);let d=l;Array.isArray(d)&&0===d.length?d=void 0:d.constructor===Object&&0===Object.keys(d).length&&(d=void 0),s=o.handler.handle({url:a,event:r,params:d});break}}!s&&this.defaultHandler&&(s=this.defaultHandler.handle({url:a,event:r})),s&&this.catchHandler&&(s=s.catch((o)=>{return this.catchHandler.handle({url:a,event:r,error:o})})),s&&r.respondWith(s.then((o)=>{return logHelper.debug(`[router.js] Returning response for `+`'${r.request.url}': `,o),o}))})}registerRoute({route:t}={}){assert.isInstance({route:t},Route),this.registerRoutes({routes:[t]})}}class Router$$1 extends Router$2{registerRoute(t,r){if('function'==typeof r&&(r={handle:r}),'string'==typeof t){if(0===t.length)throw ErrorFactory.createError('empty-express-string');super.registerRoute({route:new ExpressRoute({path:t,handler:r})})}else if(t instanceof RegExp)super.registerRoute({route:new RegExpRoute({regExp:t,handler:r})});else if(t instanceof Route)super.registerRoute({route:t});else throw ErrorFactory.createError('unsupported-route-type')}registerNavigationRoute(t,r={}){if('string'!=typeof t)throw ErrorFactory.createError('navigation-route-url-string');super.registerRoute({route:new NavigationRoute({handler:()=>caches.match(t),whitelist:r.whitelist||[/./],blacklist:r.blacklist||[]})})}}const errors$2={'not-in-sw':'sw-precaching must be loaded in your service worker file.','invalid-revisioned-entry':`File manifest entries must be either a `+`string with revision info in the url or an object with a 'url' and `+`'revision' parameters.`,'invalid-unrevisioned-entry':``,'bad-cache-bust':`The cache bust parameter must be a boolean.`,'duplicate-entry-diff-revisions':`An attempt was made to cache the same `+`url twice with each having different revisions. This is not supported.`,'request-not-cached':`A request failed the criteria to be cached. By `+`default, only responses with 'response.ok = true' are cached.`,'should-override':'Method should be overridden by the extending class.'};var ErrorFactory$4=new ErrorFactory$1(errors$2);let cacheName=`sw-runtime-caching`;self&&self.registration&&(cacheName+=`-${self.registration.scope}`);const defaultCacheName=cacheName,pluginCallbacks=['cacheDidUpdate','cacheWillMatch','cacheWillUpdate','fetchDidFail','requestWillFetch'],errors$3={'multiple-cache-will-update-plugins':'You cannot register more than one plugin that implements cacheWillUpdate.','multiple-cache-will-match-plugins':'You cannot register more than one plugin that implements cacheWillMatch.','invalid-reponse-for-caching':'The fetched response could not be cached due to an invalid response code, by default only 20X responses can be cached.'};var ErrorFactory$5=new ErrorFactory$1(errors$3),asyncToGenerator=function(t){return function(){var r=t.apply(this,arguments);return new Promise(function(a,s){function step(o,l){try{var d=r[o](l),u=d.value}catch(h){return void s(h)}return d.done?void a(u):Promise.resolve(u).then(function(h){step('next',h)},function(h){step('throw',h)})}return step('next')})}};class RequestWrapper{constructor({cacheName:t,plugins:r,fetchOptions:a,matchOptions:s}={}){if(t?(assert.isType({cacheName:t},'string'),this.cacheName=t):this.cacheName=defaultCacheName,a&&(assert.isType({fetchOptions:a},'object'),this.fetchOptions=a),s&&(assert.isType({matchOptions:s},'object'),this.matchOptions=s),this.pluginCallbacks={},r&&(assert.isArrayOfType({plugins:r},'object'),r.forEach((o)=>{for(let l of pluginCallbacks)'function'==typeof o[l]&&(this.pluginCallbacks[l]||(this.pluginCallbacks[l]=[]),this.pluginCallbacks[l].push(o[l].bind(o)))})),this.pluginCallbacks.cacheWillUpdate&&1!==this.pluginCallbacks.cacheWillUpdate.length)throw ErrorFactory$5.createError('multiple-cache-will-update-plugins');if(this.pluginCallbacks.cacheWillMatch&&1!==this.pluginCallbacks.cacheWillMatch.length)throw ErrorFactory$5.createError('multiple-cache-will-match-plugins')}getCache(){var t=this;return asyncToGenerator(function*(){return t._cache||(t._cache=yield caches.open(t.cacheName)),t._cache})()}match({request:t}){var r=this;return asyncToGenerator(function*(){assert.atLeastOne({request:t});const a=yield r.getCache();let s=yield a.match(t,r.matchOptions);return r.pluginCallbacks.cacheWillMatch&&(s=r.pluginCallbacks.cacheWillMatch[0]({cachedResponse:s})),s})()}fetch({request:t}){var r=this;return asyncToGenerator(function*(){assert.atLeastOne({request:t});const a=r.pluginCallbacks.fetchDidFail?t.clone():null;if(r.pluginCallbacks.requestWillFetch)for(let s of r.pluginCallbacks.requestWillFetch){const o=s({request:t});assert.isInstance({returnedPromise:o},Promise);const l=yield o;assert.isInstance({returnedRequest:l},Request),t=l}try{return yield fetch(t,r.fetchOptions)}catch(s){if(r.pluginCallbacks.fetchDidFail)for(let o of r.pluginCallbacks.fetchDidFail)o({request:a.clone()});throw s}})()}fetchAndCache({request:t,waitOnCache:r,cacheKey:a}){var s=this;return asyncToGenerator(function*(){assert.atLeastOne({request:t});let o;const l=yield s.fetch({request:t});let d=l.ok;if(s.pluginCallbacks.cacheWillUpdate&&(d=s.pluginCallbacks.cacheWillUpdate[0]({request:t,response:l})),d){const u=l.clone();o=s.getCache().then((()=>{var h=asyncToGenerator(function*(g){let f;'opaque'!==l.type&&s.pluginCallbacks.cacheDidUpdate&&(f=yield s.match({request:t}));yield g.put(a||t,u);for(let b of s.pluginCallbacks.cacheDidUpdate||[])b({cacheName:s.cacheName,oldResponse:f,newResponse:u,url:t.url})});return function(){return h.apply(this,arguments)}})())}else if(!d&&(logHelper.debug(`[RequestWrapper] The response for ${t.url}, with 
        a status of ${l.status}, wasn't cached. By default, only
        responses with a status of 200 are cached. You can configure the
        cacheableResponse plugin to change this default.`.replace(/\s+/g,' ')),r))throw ErrorFactory$5.createError('invalid-reponse-for-caching');return r&&o&&(yield o),l})()}}class Handler{constructor({requestWrapper:t}={}){this.requestWrapper=t?t:new RequestWrapper}handle({event:t,params:r}={}){throw Error('This abstract method must be implemented in a subclass.')}}class CacheFirst extends Handler{handle({event:t}={}){var r=this;return asyncToGenerator(function*(){assert.isInstance({event:t},FetchEvent);const a=yield r.requestWrapper.match({request:t.request});return a||(yield r.requestWrapper.fetchAndCache({request:t.request}))})()}}class CacheOnly extends Handler{handle({event:t}={}){var r=this;return asyncToGenerator(function*(){return assert.isInstance({event:t},FetchEvent),yield r.requestWrapper.match({request:t.request})})()}}class NetworkFirst extends Handler{constructor(t={}){super(t);const{networkTimeoutSeconds:r}=t;r&&(assert.isType({networkTimeoutSeconds:r},'number'),this.networkTimeoutSeconds=r)}handle({event:t}={}){var r=this;return asyncToGenerator(function*(){assert.isInstance({event:t},FetchEvent);const a=[];let s;return r.networkTimeoutSeconds&&a.push(new Promise(function(o){s=setTimeout(function(){o(r.requestWrapper.match({request:t.request}))},1e3*r.networkTimeoutSeconds)})),a.push(r.requestWrapper.fetchAndCache({request:t.request}).then(function(o){return s&&clearTimeout(s),o?o:Promise.reject('No response received; falling back to cache.')}).catch(function(){return r.requestWrapper.match({request:t.request})})),Promise.race(a)})()}}class NetworkOnly extends Handler{handle({event:t}={}){var r=this;return asyncToGenerator(function*(){return assert.isInstance({event:t},FetchEvent),yield r.requestWrapper.fetch({request:t.request})})()}}class StaleWhileRevalidate extends Handler{handle({event:t}={}){var r=this;return asyncToGenerator(function*(){assert.isInstance({event:t},FetchEvent);const a=r.requestWrapper.fetchAndCache({request:t.request}).catch(function(){return Response.error()}),s=yield r.requestWrapper.match({request:t.request});return s||(yield a)})()}}class BaseCacheManager{constructor(t){this._entriesToCache=new Map,this._requestWrapper=new RequestWrapper({cacheName:t,fetchOptions:{credentials:'same-origin'}}),this._cacheName=this._requestWrapper.cacheName}_addEntries(t){this._parsedCacheUrls=null,t.forEach((r)=>{this._addEntryToInstallList(this._parseEntry(r))})}getCacheName(){return this._cacheName}getCachedUrls(){return this._parsedCacheUrls||(this._parsedCacheUrls=Array.from(this._entriesToCache.keys()).map((t)=>new URL(t,location).href)),this._parsedCacheUrls}_addEntryToInstallList(t){const r=t.entryID,a=this._entriesToCache.get(t.entryID);return a?void this._onDuplicateInstallEntryFound(t,a):void this._entriesToCache.set(r,t)}install(){var t=this;return asyncToGenerator(function*(){if(0!==t._entriesToCache.size){const r=[];return t._entriesToCache.forEach(function(a){r.push(t._cacheEntry(a))}),Promise.all(r)}})()}_cacheEntry(t){var r=this;return asyncToGenerator(function*(){const a=yield r._isAlreadyCached(t);if(!a)try{return yield r._requestWrapper.fetchAndCache({request:t.getNetworkRequest(),waitOnCache:!0,cacheKey:t.request}),r._onEntryCached(t)}catch(s){throw ErrorFactory$4.createError('request-not-cached',{message:`Failed to get a cacheable response for `+`'${t.request.url}': ${s.message}`})}})()}cleanup(){var t=this;return asyncToGenerator(function*(){if(yield caches.has(t._cacheName)){const r=[];t._entriesToCache.forEach(function(l){r.push(l.request.url)});const a=yield t._getCache(),s=yield a.keys(),o=s.filter(function(l){return!r.includes(l.url)});return Promise.all(o.map(function(l){return a.delete(l)}))}})()}_getCache(){var t=this;return asyncToGenerator(function*(){return t._cache||(t._cache=yield caches.open(t._cacheName)),t._cache})()}_parseEntry(){throw ErrorFactory$4.createError('should-override')}_onDuplicateEntryFound(){throw ErrorFactory$4.createError('should-override')}_isAlreadyCached(){throw ErrorFactory$4.createError('should-override')}_onEntryCached(){throw ErrorFactory$4.createError('should-override')}}var idb=createCommonjsModule(function(t){'use strict';(function(){function toArray(a){return Array.prototype.slice.call(a)}function promisifyRequest(a){return new Promise(function(s,o){a.onsuccess=function(){s(a.result)},a.onerror=function(){o(a.error)}})}function promisifyRequestCall(a,s,o){var l,d=new Promise(function(u,h){l=a[s].apply(a,o),promisifyRequest(l).then(u,h)});return d.request=l,d}function promisifyCursorRequestCall(a,s,o){var l=promisifyRequestCall(a,s,o);return l.then(function(d){return d?new Cursor(d,l.request):void 0})}function proxyProperties(a,s,o){o.forEach(function(l){Object.defineProperty(a.prototype,l,{get:function(){return this[s][l]},set:function(d){this[s][l]=d}})})}function proxyRequestMethods(a,s,o,l){l.forEach(function(d){d in o.prototype&&(a.prototype[d]=function(){return promisifyRequestCall(this[s],d,arguments)})})}function proxyMethods(a,s,o,l){l.forEach(function(d){d in o.prototype&&(a.prototype[d]=function(){return this[s][d].apply(this[s],arguments)})})}function proxyCursorRequestMethods(a,s,o,l){l.forEach(function(d){d in o.prototype&&(a.prototype[d]=function(){return promisifyCursorRequestCall(this[s],d,arguments)})})}function Index(a){this._index=a}function Cursor(a,s){this._cursor=a,this._request=s}function ObjectStore(a){this._store=a}function Transaction(a){this._tx=a,this.complete=new Promise(function(s,o){a.oncomplete=function(){s()},a.onerror=function(){o(a.error)},a.onabort=function(){o(a.error)}})}function UpgradeDB(a,s,o){this._db=a,this.oldVersion=s,this.transaction=new Transaction(o)}function DB(a){this._db=a}proxyProperties(Index,'_index',['name','keyPath','multiEntry','unique']),proxyRequestMethods(Index,'_index',IDBIndex,['get','getKey','getAll','getAllKeys','count']),proxyCursorRequestMethods(Index,'_index',IDBIndex,['openCursor','openKeyCursor']),proxyProperties(Cursor,'_cursor',['direction','key','primaryKey','value']),proxyRequestMethods(Cursor,'_cursor',IDBCursor,['update','delete']),['advance','continue','continuePrimaryKey'].forEach(function(a){a in IDBCursor.prototype&&(Cursor.prototype[a]=function(){var s=this,o=arguments;return Promise.resolve().then(function(){return s._cursor[a].apply(s._cursor,o),promisifyRequest(s._request).then(function(l){return l?new Cursor(l,s._request):void 0})})})}),ObjectStore.prototype.createIndex=function(){return new Index(this._store.createIndex.apply(this._store,arguments))},ObjectStore.prototype.index=function(){return new Index(this._store.index.apply(this._store,arguments))},proxyProperties(ObjectStore,'_store',['name','keyPath','indexNames','autoIncrement']),proxyRequestMethods(ObjectStore,'_store',IDBObjectStore,['put','add','delete','clear','get','getAll','getKey','getAllKeys','count']),proxyCursorRequestMethods(ObjectStore,'_store',IDBObjectStore,['openCursor','openKeyCursor']),proxyMethods(ObjectStore,'_store',IDBObjectStore,['deleteIndex']),Transaction.prototype.objectStore=function(){return new ObjectStore(this._tx.objectStore.apply(this._tx,arguments))},proxyProperties(Transaction,'_tx',['objectStoreNames','mode']),proxyMethods(Transaction,'_tx',IDBTransaction,['abort']),UpgradeDB.prototype.createObjectStore=function(){return new ObjectStore(this._db.createObjectStore.apply(this._db,arguments))},proxyProperties(UpgradeDB,'_db',['name','version','objectStoreNames']),proxyMethods(UpgradeDB,'_db',IDBDatabase,['deleteObjectStore','close']),DB.prototype.transaction=function(){return new Transaction(this._db.transaction.apply(this._db,arguments))},proxyProperties(DB,'_db',['name','version','objectStoreNames']),proxyMethods(DB,'_db',IDBDatabase,['close']),['openCursor','openKeyCursor'].forEach(function(a){[ObjectStore,Index].forEach(function(s){s.prototype[a.replace('open','iterate')]=function(){var o=toArray(arguments),l=o[o.length-1],d=this._store||this._index,u=d[a].apply(d,o.slice(0,-1));u.onsuccess=function(){l(u.result)}}})}),[Index,ObjectStore].forEach(function(a){a.prototype.getAll||(a.prototype.getAll=function(s,o){var l=this,d=[];return new Promise(function(u){l.iterateCursor(s,function(h){return h?(d.push(h.value),void 0!==o&&d.length==o?void u(d):void h.continue()):void u(d)})})})});t.exports={open:function(a,s,o){var l=promisifyRequestCall(indexedDB,'open',[a,s]),d=l.request;return d.onupgradeneeded=function(u){o&&o(new UpgradeDB(d.result,u.oldVersion,d.transaction))},l.then(function(u){return new DB(u)})},delete:function(a){return promisifyRequestCall(indexedDB,'deleteDatabase',[a])}}})()});class IDBHelper{constructor(t,r,a){if(t==void 0||r==void 0||a==void 0)throw Error('name, version, storeName must be passed to the constructor.');this._name=t,this._version=r,this._storeName=a}_getDb(){return this._dbPromise?this._dbPromise:(this._dbPromise=idb.open(this._name,this._version,(t)=>{t.createObjectStore(this._storeName)}).then((t)=>{return t}),this._dbPromise)}close(){return this._dbPromise?this._dbPromise.then((t)=>{t.close(),this._dbPromise=null}):void 0}put(t,r){return this._getDb().then((a)=>{const s=a.transaction(this._storeName,'readwrite'),o=s.objectStore(this._storeName);return o.put(r,t),s.complete})}delete(t){return this._getDb().then((r)=>{const a=r.transaction(this._storeName,'readwrite'),s=a.objectStore(this._storeName);return s.delete(t),a.complete})}get(t){return this._getDb().then((r)=>{return r.transaction(this._storeName).objectStore(this._storeName).get(t)})}getAllValues(){return this._getDb().then((t)=>{return t.transaction(this._storeName).objectStore(this._storeName).getAll()})}getAllKeys(){return this._getDb().then((t)=>{return t.transaction(this._storeName).objectStore(this._storeName).getAllKeys()})}}const cacheBustParamName='_sw-precaching',version='v1',dbName='sw-precaching',dbVersion='1',dbStorename='asset-revisions';let tmpRevisionedCacheName=`sw-precaching-revisioned-${version}`;self&&self.registration&&(tmpRevisionedCacheName+=`-${self.registration.scope}`);const defaultRevisionedCacheName=tmpRevisionedCacheName;class RevisionDetailsModel{constructor(){this._idbHelper=new IDBHelper(dbName,dbVersion,dbStorename)}get(t){return this._idbHelper.get(t)}put(t,r){return this._idbHelper.put(t,r)}_close(){this._idbHelper.close()}}class BaseCacheEntry{constructor({entryID:t,revision:r,request:a,cacheBust:s}){this.entryID=t,this.revision=r,this.request=a,this.cacheBust=s}getNetworkRequest(){if(!0!==this.cacheBust)return this.request;let t=this.request.url;const r={};if(!0===this.cacheBust)if('cache'in Request.prototype)r.cache='reload';else{const a=new URL(t,location);a.search+=(a.search?'&':'')+encodeURIComponent(cacheBustParamName)+'='+encodeURIComponent(this.revision),t=a.toString()}return new Request(t,r)}}class StringCacheEntry extends BaseCacheEntry{constructor(t){if(assert.isType({url:t},'string'),0===t.length)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Bad url Parameter. It should be a string:'+JSON.stringify(t)));super({entryID:t,revision:t,request:new Request(t),cacheBust:!1})}}class DefaultsCacheEntry extends BaseCacheEntry{constructor({entryID:t,revision:r,url:a,cacheBust:s}){if('undefined'==typeof s&&(s=!0),'undefined'==typeof t&&(t=new URL(a,location).toString()),assert.isType({revision:r},'string'),0===r.length)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Bad revision Parameter. It should be a string with at least one character: '+JSON.stringify(r)));if(assert.isType({url:a},'string'),0===a.length)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Bad url Parameter. It should be a string:'+JSON.stringify(a)));if(assert.isType({entryID:t},'string'),0===t.length)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Bad entryID Parameter. It should be a string with at least one character: '+JSON.stringify(t)));assert.isType({cacheBust:s},'boolean'),super({entryID:t,revision:r,request:new Request(a),cacheBust:s})}}class RevisionedCacheManager extends BaseCacheManager{constructor({cacheName:t}={}){t=t||defaultRevisionedCacheName,super(t),this._revisionDetailsModel=new RevisionDetailsModel}addToCacheList({revisionedFiles:t}={}){assert.isInstance({revisionedFiles:t},Array),super._addEntries(t)}_parseEntry(t){if('undefined'==typeof t||null===t)throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Invalid file entry: '+JSON.stringify(t)));let r;switch(typeof t){case'string':r=new StringCacheEntry(t);break;case'object':r=new DefaultsCacheEntry(t);break;default:throw ErrorFactory$4.createError('invalid-revisioned-entry',new Error('Invalid file entry: '+JSON.stringify(r)));}return r}_onDuplicateInstallEntryFound(t,r){if(r.revision!==t.revision)throw ErrorFactory$4.createError('duplicate-entry-diff-revisions',new Error(`${JSON.stringify(r)} <=> `+`${JSON.stringify(t)}`))}_isAlreadyCached(t){var r=this;return asyncToGenerator(function*(){const a=yield r._revisionDetailsModel.get(t.entryID);if(a!==t.revision)return!1;const s=yield r._getCache(),o=yield s.match(t.request);return!!o})()}_onEntryCached(t){var r=this;return asyncToGenerator(function*(){yield r._revisionDetailsModel.put(t.entryID,t.revision)})()}_close(){this._revisionDetailsModel._close()}cleanup(){return super.cleanup().then(()=>{return this._close()})}}class RequestCacheEntry extends BaseCacheEntry{constructor(t){if(!(t instanceof Request))throw ErrorFactory$4.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(t)));super({entryID:t.url,request:t,cacheBust:!1})}}class UnrevisionedCacheManager extends BaseCacheManager{constructor({cacheName:t}={}){super(t)}addToCacheList({unrevisionedFiles:t}={}){assert.isInstance({unrevisionedFiles:t},Array),super._addEntries(t)}_parseEntry(t){if('undefined'==typeof t||null===t)throw ErrorFactory$4.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(t)));if('string'==typeof t)return new StringCacheEntry(t);if(t instanceof Request)return new RequestCacheEntry(t);throw ErrorFactory$4.createError('invalid-unrevisioned-entry',new Error('Invalid file entry: '+JSON.stringify(t)))}_onDuplicateInstallEntryFound(){}_isAlreadyCached(){return asyncToGenerator(function*(){return!1})()}_onEntryCached(){}}if(!assert.isSWEnv())throw ErrorFactory$4.createError('not-in-sw');const idbName=`sw-cache-expiration-${self.registration.scope}`,idbVersion=1,urlPropertyName='url',timestampPropertyName='timestamp',errors$4={'max-entries-or-age-required':`Either the maxEntries or maxAgeSeconds
    parameters (or both) are required when constructing Plugin.`,'max-entries-must-be-number':`The maxEntries parameter to the Plugin
    constructor must either be a number or undefined.`,'max-age-seconds-must-be-number':`The maxAgeSeconds parameter to the Plugin
    constructor must either be a number or undefined.`};var ErrorFactory$6=new ErrorFactory$1(errors$4);class Plugin{constructor({maxEntries:t,maxAgeSeconds:r}={}){if(!(t||r))throw ErrorFactory$6.createError('max-entries-or-age-required');if(t&&'number'!=typeof t)throw ErrorFactory$6.createError('max-entries-must-be-number');if(r&&'number'!=typeof r)throw ErrorFactory$6.createError('max-age-seconds-must-be-number');this.maxEntries=t,this.maxAgeSeconds=r,this._dbs=new Map,this._caches=new Map}getDB({cacheName:t}={}){var r=this;return asyncToGenerator(function*(){assert.isType({cacheName:t},'string');const a=`${idbName}-${t}`;if(!r._dbs.has(a)){const s=yield idb.open(a,idbVersion,function(o){const l=o.createObjectStore(t,{keyPath:urlPropertyName});l.createIndex(timestampPropertyName,timestampPropertyName,{unique:!1})});r._dbs.set(a,s)}return r._dbs.get(a)})()}getCache({cacheName:t}={}){var r=this;return asyncToGenerator(function*(){if(assert.isType({cacheName:t},'string'),!r._caches.has(t)){const a=yield caches.open(t);r._caches.set(t,a)}return r._caches.get(t)})()}cacheWillMatch({cachedResponse:t,now:r}={}){return this.isResponseFresh({cachedResponse:t,now:r})?t:null}isResponseFresh({cachedResponse:t,now:r}={}){if(t&&this.maxAgeSeconds){assert.isInstance({cachedResponse:t},Response);const a=t.headers.get('date');if(a){'undefined'==typeof r&&(r=Date.now());const s=new Date(a);if(s.getTime()+1e3*this.maxAgeSeconds<r)return!1}}return!0}cacheDidUpdate({cacheName:t,newResponse:r,url:a,now:s}={}){assert.isType({cacheName:t},'string'),assert.isInstance({newResponse:r},Response),'undefined'==typeof s&&(s=Date.now()),this.updateTimestamp({cacheName:t,url:a,now:s}).then(()=>{this.expireEntries({cacheName:t,now:s})})}updateTimestamp({cacheName:t,url:r,now:a}={}){var s=this;return asyncToGenerator(function*(){assert.isType({url:r},'string'),assert.isType({cacheName:t},'string'),'undefined'==typeof a&&(a=Date.now());const o=yield s.getDB({cacheName:t}),l=o.transaction(t,'readwrite');l.objectStore(t).put({[timestampPropertyName]:a,[urlPropertyName]:r}),yield l.complete})()}expireEntries({cacheName:t,now:r}={}){var a=this;return asyncToGenerator(function*(){assert.isType({cacheName:t},'string'),'undefined'==typeof r&&(r=Date.now());const s=a.maxAgeSeconds?yield a.findOldEntries({cacheName:t,now:r}):[],o=a.maxEntries?yield a.findExtraEntries({cacheName:t}):[],l=[...new Set(s.concat(o))];return yield a.deleteFromCacheAndIDB({cacheName:t,urls:l}),l})()}findOldEntries({cacheName:t,now:r}={}){var a=this;return asyncToGenerator(function*(){assert.isType({cacheName:t},'string'),assert.isType({now:r},'number');const s=r-1e3*a.maxAgeSeconds,o=[],l=yield a.getDB({cacheName:t}),d=l.transaction(t,'readonly'),u=d.objectStore(t),h=u.index(timestampPropertyName);return h.iterateCursor(function(g){g&&(g.value[timestampPropertyName]<s&&o.push(g.value[urlPropertyName]),g.continue())}),yield d.complete,o})()}findExtraEntries({cacheName:t}={}){var r=this;return asyncToGenerator(function*(){assert.isType({cacheName:t},'string');const a=[],s=yield r.getDB({cacheName:t});let o=s.transaction(t,'readonly'),l=o.objectStore(t),d=l.index(timestampPropertyName);const u=yield d.count();return u>r.maxEntries&&(o=s.transaction(t,'readonly'),l=o.objectStore(t),d=l.index(timestampPropertyName),d.iterateCursor(function(h){h&&(a.push(h.value[urlPropertyName]),u-a.length>r.maxEntries&&h.continue())})),yield o.complete,a})()}deleteFromCacheAndIDB({cacheName:t,urls:r}={}){var a=this;return asyncToGenerator(function*(){if(assert.isType({cacheName:t},'string'),assert.isArrayOfType({urls:r},'string'),0<r.length){const s=yield a.getCache({cacheName:t}),o=yield a.getDB({cacheName:t});yield r.forEach((()=>{var l=asyncToGenerator(function*(d){yield s.delete(d);const u=o.transaction(t,'readwrite'),h=u.objectStore(t);yield h.delete(d),yield u.complete});return function(){return l.apply(this,arguments)}})())}})()}}const errors$5={'channel-name-required':`The channelName parameter is required when
    constructing a new BroadcastCacheUpdate instance.`,'responses-are-same-parameters-required':`The first, second, and
    headersToCheck parameters must be valid when calling responsesAreSame()`};var ErrorFactory$7=new ErrorFactory$1(errors$5);const cacheUpdatedMessageType='CACHE_UPDATED',defaultHeadersToCheck=['content-length','etag','last-modified'],defaultSource='sw-broadcast-cache-update';function broadcastUpdate({channel:t,cacheName:r,url:a,source:s}){assert.isInstance({channel:t},BroadcastChannel),assert.isType({cacheName:r},'string'),assert.isType({source:s},'string'),assert.isType({url:a},'string'),t.postMessage({type:cacheUpdatedMessageType,meta:s,payload:{cacheName:r,updatedUrl:a}})}function responsesAreSame({first:t,second:r,headersToCheck:a}={}){if(!(t instanceof Response&&r instanceof Response&&a instanceof Array))throw ErrorFactory$7.createError('responses-are-same-parameters-required');return a.every((s)=>{return t.headers.has(s)===r.headers.has(s)&&t.headers.get(s)===r.headers.get(s)})}class BroadcastCacheUpdate{constructor({channelName:t,headersToCheck:r,source:a}={}){if('string'!=typeof t||0===t.length)throw ErrorFactory$7.createError('channel-name-required');this.channelName=t,this.headersToCheck=r||defaultHeadersToCheck,this.source=a||defaultSource}get channel(){return this._channel||(this._channel=new BroadcastChannel(this.channelName)),this._channel}notifyIfUpdated({first:t,second:r,cacheName:a}){assert.isType({cacheName:a},'string'),responsesAreSame({first:t,second:r,headersToCheck:this.headersToCheck})||broadcastUpdate({cacheName:a,url:r.url,channel:this.channel,source:this.source})}}class BroadcastCacheUpdatePlugin extends BroadcastCacheUpdate{cacheDidUpdate({cacheName:t,oldResponse:r,newResponse:a}){assert.isType({cacheName:t},'string'),assert.isInstance({newResponse:a},Response),r&&this.notifyIfUpdated({cacheName:t,first:r,second:a})}}class Plugin$1{constructor({statuses:t,headers:r}={}){assert.atLeastOne({statuses:t,headers:r}),t!==void 0&&assert.isArrayOfType({statuses:t},'number'),r!==void 0&&assert.isType({headers:r},'object'),this.statuses=t,this.headers=r}cacheWillUpdate({response:t}={}){return this.isResponseCacheable({response:t})}isResponseCacheable({response:t}={}){assert.isInstance({response:t},Response);let r=!0;return this.statuses&&(r=this.statuses.includes(t.status)),this.headers&&r&&(r=Object.keys(this.headers).some((a)=>{return t.headers.get(a)===this.headers[a]})),r}}class SWLib{constructor(){this._router=new Router$$1,this._revisionedCacheManager=new RevisionedCacheManager,this._unrevisionedCacheManager=new UnrevisionedCacheManager,this._registerInstallActivateEvents(),this._registerDefaultRoutes()}cacheRevisionedAssets(t){if(!Array.isArray(t))throw ErrorFactory.createError('bad-revisioned-cache-list');this._revisionedCacheManager.addToCacheList({revisionedFiles:t})}warmRuntimeCache(t){if(!Array.isArray(t))throw ErrorFactory.createError('bad-revisioned-cache-list');this._unrevisionedCacheManager.addToCacheList({unrevisionedFiles:t})}get router(){return this._router}get Route(){return Route}cacheFirst(t){return this._getCachingMechanism(CacheFirst,t)}cacheOnly(t){return this._getCachingMechanism(CacheOnly,t)}networkFirst(t){return this._getCachingMechanism(NetworkFirst,t)}networkOnly(t){return this._getCachingMechanism(NetworkOnly,t)}staleWhileRevalidate(t){return this._getCachingMechanism(StaleWhileRevalidate,t)}_getCachingMechanism(t,r={}){const a={cacheExpiration:Plugin,broadcastCacheUpdate:BroadcastCacheUpdatePlugin,cacheableResponse:Plugin$1},s={plugins:[]};r.cacheName&&(s.cacheName=r.cacheName);const o=Object.keys(a);return o.forEach((l)=>{if(r[l]){const d=a[l],u=r[l];s.plugins.push(new d(u))}}),r.plugins&&r.plugins.forEach((l)=>{s.plugins.push(l)}),new t({requestWrapper:new RequestWrapper(s)})}_registerInstallActivateEvents(){self.addEventListener('install',(t)=>{t.waitUntil(Promise.all([this._revisionedCacheManager.install(),this._unrevisionedCacheManager.install()]))}),self.addEventListener('activate',(t)=>{t.waitUntil(Promise.all([this._revisionedCacheManager.cleanup(),this._unrevisionedCacheManager.cleanup()]))})}_registerDefaultRoutes(){const t=this.cacheFirst({cacheName:this._revisionedCacheManager.getCacheName()}),r=new this.Route({match:({url:a,event:s})=>{const o=this._revisionedCacheManager.getCachedUrls();return-1!==o.indexOf(a.href)},handler:t});this.router.registerRoute(r)}}if(!assert.isSWEnv())throw ErrorFactory.createError('not-in-sw');const swLibInstance=new SWLib;export default swLibInstance;