{"version":3,"sources":["browser/mocha-utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","mochaUtils","window","self","goog","addEventListener","event","data","ports","postMessage","ready","startInBrowserMochaTests","then","results","error","../utils/mocha.js","2","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","MochaUtils","this","value","_this","Promise","resolve","topLevelTitle","rawTestData","passedTests","failedTests","mocha","checkLeaks","runResults","run","total","testResults","raw","passed","failed","on","test","parseableTest","_getFriendlyTestResult","push","suite","suites","title","swPath","sendMessage","swController","testName","timeout","reject","messageChannel","MessageChannel","port1","onmessage","port2","setTimeout","swUtils","activateSW","iframe","contentWindow","navigator","serviceWorker","registration","active","sw","msgResponse","catch","describe","forEach","testResult","it","state","errMessage","stack","browserName","driver","url","get","wait","executeScript","testsuite","friendlyResult","parentTitle","parent","err","message","prettyResultsString","testResultString","indentedStack","split","join","pad"],"mappings":"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","file":"mocha-utils.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/**\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/* global require */\n/* eslint-env browser */\n\n(function () {\n  var mochaUtils = require('../utils/mocha.js');\n\n  /* eslint-disable no-negated-condition */\n  if (typeof window === 'undefined') {\n    self.goog = self.goog || {};\n    self.goog.mochaUtils = self.goog.mochaUtils || mochaUtils;\n\n    self.addEventListener('message', function (event) {\n      switch (event.data) {\n        case 'ready-check':\n          {\n            event.ports[0].postMessage({\n              ready: true\n            });\n            break;\n          }\n        case 'start-tests':\n          {\n            self.goog.mochaUtils.startInBrowserMochaTests().then(function (results) {\n              event.ports[0].postMessage(results);\n            });\n            break;\n          }\n        default:\n          {\n            event.ports[0].postMessage({\n              error: 'Unknown test name: ' + event.data\n            });\n            break;\n          }\n      }\n    });\n  } else {\n    window.goog = window.goog || {};\n    window.goog.mochaUtils = window.goog.mochaUtils || mochaUtils;\n  }\n})();\n\n},{\"../utils/mocha.js\":2}],2:[function(require,module,exports){\n'use strict';\n\n/**\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n/* eslint-env node, browser, worker, mocha */\n\n/**\n * The results from a set of Mocha tests\n *\n * @typedef {Object} MochaTestResults\n * @property {Array<MochaTestResult>} passed   Tests that have passed\n * @property {Array<MochaTestResult>} failed   Tests that have failed\n */\n\n/**\n * @typedef {Object} MochaTestResult\n * @property {String} parentTitle  Title of the parent test suite\n * @property {String} title        Title of the test case\n * @property {String} state        State of the test - 'passed' or 'failed'\n * @property {String} errMessage   This is defined if the test threw an error\n */\n\n/**\n * <p>This class is a helper that will run Mocha tests and offers consistent\n * error reporting.</p>\n *\n * @example <caption>Usage in Browser Window</caption>\n * <script src=\"/node_modules/sw-testing-helpers/browser/mocha-utils.js\">\n * </script>\n * <script>\n * console.log(window.goog.mochaUtils);\n * </script>\n *\n * @example <caption>Usage in Service Worker</caption>\n * importScripts('/node_modules/sw-testing-helpers/browser/mocha-utils.js');\n * console.log(self.goog.mochaUtils);\n *\n * @example <caption>Usage in Node</caption>\n * const mochaUtils = require('sw-testing-helpers').mochaUtils;\n * console.log(mochaUtils);\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MochaUtils = function () {\n  function MochaUtils() {\n    _classCallCheck(this, MochaUtils);\n  }\n\n  _createClass(MochaUtils, [{\n    key: 'startInBrowserMochaTests',\n\n    /**\n     * Start Mocha tests in a browser, checking for leaks and\n     * collect passed / failed results, resolving the promise with the results\n     * in a friendly format.\n     *\n     * @return {Promise<MochaTestResults>} The resutls from the Mocha test\n     */\n    value: function startInBrowserMochaTests() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var topLevelTitle = null;\n        var rawTestData = [];\n        var passedTests = [];\n        var failedTests = [];\n\n        mocha.checkLeaks();\n\n        var runResults = mocha.run();\n\n        if (runResults.total === 0) {\n          resolve({\n            topLevelTitle: topLevelTitle,\n            testResults: {\n              raw: rawTestData,\n              passed: passedTests,\n              failed: failedTests\n            }\n          });\n          return;\n        }\n\n        // pass, fail and end events allow up to capture results and\n        // determine when to publish test results\n        runResults.on('pass', function (test) {\n          var parseableTest = _this._getFriendlyTestResult(test);\n          rawTestData.push(parseableTest);\n          passedTests.push(parseableTest);\n        }).on('fail', function (test) {\n          var parseableTest = _this._getFriendlyTestResult(test);\n          rawTestData.push(parseableTest);\n          failedTests.push(parseableTest);\n        }).on('end', function () {\n          resolve({\n            topLevelTitle: topLevelTitle,\n            testResults: {\n              raw: rawTestData,\n              passed: passedTests,\n              failed: failedTests\n            }\n          });\n        });\n\n        // No tests so end won't be called\n        if (mocha.suite.suites.length === 0) {\n          resolve({\n            topLevelTitle: topLevelTitle,\n            testResults: {\n              raw: rawTestData,\n              passed: passedTests,\n              failed: failedTests\n            }\n          });\n        } else {\n          topLevelTitle = mocha.suite.suites[0].title;\n        }\n      });\n    }\n\n    /**\n     * <p>Register a service worker and send a message to the service\n     * worker to start running Mocha tests in the worker.</p>\n     *\n     * <p>It's expected that the service worker will import `mocha-utils.js` to\n     * make this work seamlessly.</p>\n     *\n     * <p>This requires `window-utils.js` to be added to the page.</p>\n     *\n     * @param  {String} swPath The path to a service worker\n     * @return {Promise.<MochaTestResults>}        Promise resolves when the tests\n     * in the service worker have completed, returned the results.\n     */\n\n  }, {\n    key: 'registerServiceWorkerMochaTests',\n    value: function registerServiceWorkerMochaTests(swPath) {\n      var sendMessage = function sendMessage(swController, testName, timeout) {\n        return new Promise(function (resolve, reject) {\n          var messageChannel = new MessageChannel();\n          messageChannel.port1.onmessage = function (event) {\n            resolve(event.data);\n          };\n\n          swController.postMessage(testName, [messageChannel.port2]);\n\n          if (timeout) {\n            setTimeout(function () {\n              return reject(new Error('Message Timeout'));\n            }, timeout);\n          }\n        });\n      };\n\n      return window.goog.swUtils.activateSW(swPath).then(function (iframe) {\n        return iframe.contentWindow.navigator.serviceWorker.ready.then(function (registration) {\n          return registration.active;\n        }).then(function (sw) {\n          return sendMessage(sw, 'ready-check', 400).then(function (msgResponse) {\n            if (!msgResponse.ready) {\n              return Promise.reject();\n            }\n\n            return sw;\n          }).catch(function () {\n            throw new Error('Service worker failed to respond to the ready ' + 'check. Have you imported browser/mocha-utils.js in the SW?');\n          });\n        }).then(function (sw) {\n          return sendMessage(sw, 'start-tests');\n        }).then(function (msgResponse) {\n          if (!msgResponse.testResults) {\n            throw new Error('Unexpected test result: ' + msgResponse);\n          } else if (msgResponse.testResults.raw.length > 0 && describe) {\n            describe('[SW Internal Results] ' + msgResponse.topLevelTitle, function () {\n              msgResponse.testResults.raw.forEach(function (testResult) {\n                it(testResult.title, function () {\n                  if (testResult.state !== 'passed') {\n                    var error = new Error(testResult.errMessage);\n                    error.stack = testResult.stack;\n                    throw error;\n                  }\n                });\n              });\n            });\n          }\n        });\n      });\n    }\n\n    /**\n     * <p>Print the User Agent of the browser, load the page\n     * the Mocha tests are in and wait for the results.</p>\n     *\n     * @param  {String} browserName Name to be printed with the browsers UserAgent\n     * @param  {WebDriver} driver   Instance of a {@link http://selenium.googlecode.com/git/docs/api/javascript/class_webdriver_WebDriver.html | WebDriver}\n     * @param  {String} url         URL of that has mocha tests.\n     * @return {Promise<MochaTestResults>}   Returns the results from the\n     * browsers tests\n     */\n\n  }, {\n    key: 'startWebDriverMochaTests',\n    value: function startWebDriverMochaTests(browserName, driver, url) {\n      return driver.get(url).then(function () {\n        // We get webdriver to wait until window.testsuite.testResults is defined.\n        // This is set in the in browser mocha tests when the tests have finished\n        // successfully\n        return driver.wait(function () {\n          return driver.executeScript(function () {\n            return typeof window.testsuite !== 'undefined' && typeof window.testsuite.testResults !== 'undefined';\n          });\n        });\n      }).then(function () {\n        // This simply retrieves the test results from the inbrowser mocha tests\n        return driver.executeScript(function () {\n          return window.testsuite.testResults;\n        });\n      });\n    }\n\n    /**\n     * @private\n     * @param {Object} testResult The Mocha test result to be filtered.\n     * @return {Object} A friendlier interpretation of the mocha test result.\n     */\n\n  }, {\n    key: '_getFriendlyTestResult',\n    value: function _getFriendlyTestResult(testResult) {\n      var friendlyResult = {\n        parentTitle: testResult.parent.title,\n        title: testResult.title,\n        state: testResult.state\n      };\n\n      if (testResult.err) {\n        friendlyResult.errMessage = testResult.err.message;\n        friendlyResult.stack = testResult.err.stack;\n      }\n\n      return friendlyResult;\n    }\n\n    /**\n     * @param {object} testResults Tests to convert to a friendly message\n     * @return {String} The results in a pretty string.\n     */\n\n  }, {\n    key: 'prettyPrintResults',\n    value: function prettyPrintResults(testResults) {\n      var prettyResultsString = '';\n      /* eslint-disable no-console */\n      testResults.raw.forEach(function (testResult) {\n        var testResultString = '';\n        switch (testResult.state) {\n          case 'passed':\n            testResultString += '✔️ [Passed] ';\n            break;\n          case 'failed':\n            testResultString += '❌ [Failed] ';\n            break;\n          default:\n            testResultString += '❓ [Unknown] ';\n            break;\n        }\n\n        testResultString += testResult.parentTitle + ' > ' + (testResult.title + '\\n');\n\n        if (testResult.state === 'failed') {\n          var pad = '    ';\n          var indentedStack = testResult.stack.split('\\n').join('\\n' + pad);\n\n          testResultString += '\\n' + pad + testResult.errMessage + '\\n\\n';\n          testResultString += pad + '[Stack Trace]\\n';\n          testResultString += '' + pad + indentedStack + '\\n';\n        }\n\n        prettyResultsString += testResultString + '\\n';\n      });\n      /* eslint-enable no-console */\n\n      return prettyResultsString;\n    }\n  }]);\n\n  return MochaUtils;\n}();\n\nif (typeof module === 'undefined' || typeof module.exports === 'undefined') {\n  throw new Error('To use MochaUtils in the browser please use the ' + 'browser/mocha-utils.js file');\n}\n\nmodule.exports = new MochaUtils();\n\n},{}]},{},[1]);\n"]}