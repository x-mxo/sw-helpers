{
  "_args": [
    [
      {
        "raw": "parse-appcache-manifest@^0.2.0",
        "scope": null,
        "escapedName": "parse-appcache-manifest",
        "name": "parse-appcache-manifest",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "/usr/local/google/home/mattgaunt/Projects/Code/sw-helpers"
    ]
  ],
  "_from": "parse-appcache-manifest@>=0.2.0 <0.3.0",
  "_id": "parse-appcache-manifest@0.2.0",
  "_inCache": true,
  "_location": "/parse-appcache-manifest",
  "_npmUser": {
    "name": "meryn",
    "email": "merynstol@gmail.com"
  },
  "_npmVersion": "1.2.25",
  "_phantomChildren": {},
  "_requested": {
    "raw": "parse-appcache-manifest@^0.2.0",
    "scope": null,
    "escapedName": "parse-appcache-manifest",
    "name": "parse-appcache-manifest",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/parse-appcache-manifest/-/parse-appcache-manifest-0.2.0.tgz",
  "_shasum": "d0de83727a304d178bcdc76794677110a6625c2b",
  "_shrinkwrap": null,
  "_spec": "parse-appcache-manifest@^0.2.0",
  "_where": "/usr/local/google/home/mattgaunt/Projects/Code/sw-helpers",
  "author": {
    "name": "Meryn Stol",
    "email": "merynstol@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/meryn/parse-appcache-manifest/issues"
  },
  "contributors": [
    {
      "name": "Meryn Stol",
      "url": "https://github.com/meryn"
    },
    {
      "name": "Mike Reinstein",
      "url": "https://github.com/mreinstein"
    }
  ],
  "dependencies": {},
  "description": "Parses HTML5 application cache manifest.",
  "devDependencies": {
    "coffee-script": "1.6.x",
    "mocha": "~1.9.0",
    "source-map-support": "~0.1.4"
  },
  "directories": {},
  "dist": {
    "shasum": "d0de83727a304d178bcdc76794677110a6625c2b",
    "tarball": "https://registry.npmjs.org/parse-appcache-manifest/-/parse-appcache-manifest-0.2.0.tgz"
  },
  "engines": {
    "node": "0.10.x",
    "npm": ">= 1.2.x"
  },
  "homepage": "https://github.com/meryn/parse-appcache-manifest",
  "keywords": [
    "HTML5",
    "appcache",
    "manifest"
  ],
  "license": "MIT",
  "main": "lib/parse-appcache-manifest.js",
  "maintainers": [
    {
      "name": "meryn",
      "email": "merynstol@gmail.com"
    }
  ],
  "name": "parse-appcache-manifest",
  "optionalDependencies": {},
  "readme": "# parse-appcache-manifest [![Build Status](https://travis-ci.org/meryn/parse-appcache-manifest.png?branch=master)](https://travis-ci.org/meryn/parse-appcache-manifest) [![Dependency Status](https://david-dm.org/meryn/parse-appcache-manifest.png)](https://david-dm.org/meryn/parse-appcache-manifest)\n\nParses HTML5 application cache manifest.\n\n## Usage\n\n`npm install parse-appcache-manifest`\n\n#### Direct Object\n\n```javascript\nparseManifest = require(\"parse-appcache-manifest\")\nentries = parseManifest(manifest)\n```\n\n`entries` will be an object with four properties: `cache`, `network`, `fallback`, and `settings`. \n\n`cache`, `settings`, and `network` are arrays which contain entries. \n\n`fallback` is an object with the url (or url pattern) as key, and the fallback url as value.\n\n\n#### Tokenized\nIf you need access to a tokenized version of the manifest file (e.g., you want to modify an existing manifest file and need to preserve comments and newlines, etc)\n\n\n```coffeescript\nappcacheParse  = require 'parse-appcache-manifest'\nresult = appcacheParse(input).tokens\n```\n\nwhere `result` is a flat, ordered list of tokens that comes back. \n\n `input` =\n\n```\nCACHE MANIFEST\n\n# some explicit resources\nCACHE:\n/happy.html\n/good.css\n\nNETWORK:\n*\nhttp://*\nhttps://*\n```\n\n`result` =\n\n```json\n[\n  { type: 'magic signature', value: 'CACHE MANIFEST' },\n  { type: 'newline' },\n  { type: 'comment', value: 'some explicit resources' },\n  { type: 'mode', value: 'CACHE' }\n  { type: 'data', tokens: [ '/happy.html' ] },\n  { type: 'data', tokens: [ '/good.css' ] },\n  { type: 'newline' },\n  { type: 'mode', value: 'NETWORK' }\n  { type: 'data', tokens: [ '*' ] },\n  { type: 'data', tokens: [ 'http://*' ] },\n  { type: 'data', tokens: [ 'https://*' ] }\n]\n```\n\nYou can use https://github.com/meryn/render-appcache-manifest to convert a token list back to an appcache manifest.\n\n## Development\n\nTo compile the code:\n\n```sh\ncd parse-appcache-manifest\ncoffee -cm -o lib/ src/\n```\n\n## Credits\n\nThe initial structure of this module was generated by [Jumpstart](https://github.com/meryn/jumpstart), using the [Jumpstart Black Coffee](https://github.com/meryn/jumpstart-black-coffee) template.\n\nThis code is based on code from [Mikko Ohtamaa](http://opensourcehacker.com/).\n\nTokenizing support, settings support, whatwg spec conformance, and updated documentation from https://github.com/mreinstein.\n\n## License\n\nparse-appcache-manifest is released under the [MIT License](http://opensource.org/licenses/MIT).  \nCopyright (c) 2013 Meryn Stol, [Mike Reinstein](https://github.com/mreinstein)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/meryn/parse-appcache-manifest.git"
  },
  "scripts": {
    "prepublish": "npm test",
    "pretest": "make build",
    "test": "make test"
  },
  "version": "0.2.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": "0.10.x",
        "npm": ">= 1.2.x"
      },
      "pkgid": "parse-appcache-manifest@0.2.0"
    }
  ]
}
